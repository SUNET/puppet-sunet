ServerName ${SERVER_NAME}

# Write to STDERR
ErrorLog /proc/self/fd/2

<VirtualHost *:443>
    ServerName ${SERVER_NAME}
    SSLEngine On
    SSLProtocol             all -SSLv3 -TLSv1 -TLSv1.1
    SSLCipherSuite          ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256
    SSLHonorCipherOrder     on
    SSLCompression          off
    SSLSessionTickets       off

    SSLCertificateFile /etc/ssl/certs/${SERVER_NAME}.crt
    SSLCertificateChainFile /etc/ssl/certs/${SERVER_NAME}-chain.crt
    SSLCertificateKeyFile /etc/ssl/private/${SERVER_NAME}.key

    # Everyone who wants to POST something have to present a client cert
    # that is signed by this CA.
    SSLCACertificateFile /etc/ssl/certs/${SERVER_NAME}-client-ca.crt
    SSLVerifyClient optional
    SSLVerifyDepth ${SSLVerifyDepth}
    DocumentRoot /var/www/

    ServerAdmin noc@example.com

    Header set Host "${SERVER_NAME}"
    RequestHeader set X-Forwarded-Proto "https"

    # HSTS (mod_headers is required) (15768000 seconds = 6 months)
    Header always set Strict-Transport-Security "max-age=15768000"

    ProxyRequests On

    AddDefaultCharset utf-8

    # Write to STDOUT
    CustomLog /proc/self/fd/1 combined

    LogLevel warn
    ServerSignature off

    AddDefaultCharset utf-8

    ProxyPreserveHost  On
    ProxyRequests      Off
    SSLProxyEngine     On
    ProxyPass          /v2  ${PROXY_TARGET}/v2
    ProxyPassReverse   /v2  ${PROXY_TARGET}/v2

    <Location />
       Require all denied
    </Location>

    SSLUserName SSL_CLIENT_S_DN

    <Location /v2>
       Order deny,allow
       Allow from all
       <If "-f '/read-only'">
          <RequireAll>
             Require ssl
             Require method GET
          </RequireAll>
       </If>
       <Else>
           <RequireAll>
              Require ssl
              Require expr ( "%{SSL_CLIENT_M_SERIAL}" != "35FE628DC47E4AF9" )
              Require expr ( "%{SSL_CLIENT_M_SERIAL}" != "A2BB746766CEFDB9" )
              <RequireAny>
                 Require method GET
                 Require ssl-verify-client
              </RequireAny>
          </RequireAll>
       </Else>
    </Location>
</VirtualHost>
