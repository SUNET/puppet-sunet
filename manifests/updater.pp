# Create a shellscript to automatically upgrade OS packages, and optionally run it from cron.
# @param cosmos_automatic_reboot  If true, allow automatic reboots when update-and-upgrade sees fit.
# @param cron                     If true, set up a scriptherder cronjob to run automatic upgrades.
# @param hour                     Hour to run the script from cron.
# @param minute                   Minute to run the script from cron.
class sunet::updater (
  Boolean $cosmos_automatic_reboot = false,
  Boolean $cron     = false,
  Integer $interval = 120,
  String  $hour     = '4',
  String  $minute   = '2',
  String  $weekday  = '*',
) {
  # Create shellscript to perform automatic upgrades non-interactively
  file { '/usr/local/sbin/silent-update-and-upgrade':
    mode    => '0755',
    owner   => 'root',
    group   => 'root',
    content => template('sunet/updater/silent-update-and-upgrade.erb'),
  }
  $_ensure_file = $cosmos_automatic_reboot ? {
    true  => 'present',
    false => 'absent'
  }
  file { '/etc/cosmos-automatic-reboot':
    ensure  => $_ensure_file,
    content => "# generated by sunet::updater - do not edit or remove by hand\n",
  }

  # clean away old cronjob
  cron { 'silent-update-and-upgrade': ensure => absent }
  file { '/etc/scriptherder/check/upgrader.ini': ensure => absent }
  $_ensure_cronjob = $cron ? {
    true  => 'present',
    false => 'absent'
  }

  sunet::scriptherder::cronjob { 'update_and_upgrade':
    ensure        => $_ensure_cronjob,
    cmd           => '/usr/local/sbin/silent-update-and-upgrade --random-sleep',
    minute        => $minute,
    hour          => $hour,
    ok_criteria   => ['exit_status=0', 'max_age=25h'],
    warn_criteria => ['exit_status=0', 'max_age=49h'],
    purge_results => true,
  }
}
