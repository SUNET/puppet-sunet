#!/bin/bash
#
# This script removes docker containers IP addresses from the local
# unbound resolver in the pre-stop actions.

if [ "x$ACTION" != "xpre-stop" ]; then
    exit 0
fi

UNBOUND_IP="<%= @ipaddress_docker0 %>"

logtag="dockerhost[$ACTION $NAME $$]"
logger -t "${logtag}" "$NAME ($IMAGE), CID: '$CID'"

if [ "x${NAME}" = "xunbound" ]; then
    logger -t "${logtag}" "Ignoring unbound process to let other containers un-register themselves"
    exit 0
fi

networkMode=$(docker inspect --format '{{ .HostConfig.NetworkMode }}' "${CID}" 2>/dev/null)
if [ "x$networkMode" != "xbridge" ]; then
    logger -t "${logtag}" "Container is not running in bridge mode (${networkMode}). Not unregistering Unbound DNS data."
    exit 0
fi

# Remove registered name.
# XXX this does NOT handle multiple instances of the same image running on
# a single Docker host!
logger -t "${logtag}" "Un-registering ${NAME}.docker from unbound at ${UNBOUND_IP}"
unbound-control -s "${UNBOUND_IP}" local_data_remove "${NAME}.docker." > /dev/null

logger -t "${logtag}" "Unregistered ${NAME}.docker from unbound at ${UNBOUND_IP}"

if [ "x${CID}" != "x" ]; then
    logger -t "${logtag}" "Issuing docker stop ${CID}"
    docker stop "${CID}"
    logger -t "${logtag}" "Stopped container"
else
    logger -t "${logtag}" "No CID - CAN'T STOP CONTAINER"
fi

exit 0
