#!/bin/bash
#
# This script tries to make sure the container is not running, then removes the CID file.
#

if [ "x$ACTION" != "xpost-stop" ]; then
    exit 0
fi

logtag="dockerhost[$ACTION $NAME $$]"
logger -t "${logtag}" "$NAME ($IMAGE), CID: '$CID'"

if [ -f "${CIDFILE}" ]; then
    logger -t "${logtag}" "Found CID file (${CIDFILE}). Checking if container is still running."
    for retry in 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20; do
        # Clean away the CID file in pre-start if the container is in fact not running
	RUNNING=$(docker inspect --format '{{ .State.Running }}' "${CID}" 2>/dev/null)
	if [ "x${RUNNING}" = "xfalse" -o "x${RUNNING}" = "x" ]; then
	    # XXX Looking at .State.Running might not work if container is .State.Paused ?
            logger -t "${logtag}" "Removing left-over CID file '${CIDFILE}' (running: ${RUNNING})";
            rm -f "${CIDFILE}"
	    break
	else
	    STATE=$(docker inspect --format '{{ .State }}' "${CID}" 2>/dev/null)
	    logger -t "${logtag}" "Container STILL RUNNING (try ${retry}/5): $STATE"
	    sleep 1
	fi
    done
else
    logger -t "${logtag}" "CID file ${CIDFILE} not found (this is not an error)"
fi

exit 0
