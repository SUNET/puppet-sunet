{
  /* *********************  Main SOGo configuration file  **********************
   *                                                                           *
   * Since the content of this file is a dictionary in OpenStep plist format,  *
   * the curly braces enclosing the body of the configuration are mandatory.   *
   * See the Installation Guide for details on the format.                     *
   *                                                                           *
   * C and C++ style comments are supported.                                   *
   *                                                                           *
   * This example configuration contains only a subset of all available        *
   * configuration parameters. Please see the installation guide more details. *
   *                                                                           *
   * ~sogo/GNUstep/Defaults/.GNUstepDefaults has precedence over this file,    *
   * make sure to move it away to avoid unwanted parameter overrides.          *
   *                                                                           *
   * **************************************************************************/

  /* Database configuration (mysql://, postgresql:// or oracle://) */
  SOGoProfileURL = "mysql://sogo:<%= @db_password %>@sogo-db:3306/sogo/sogo_user_profile";
  OCSFolderInfoURL = "mysql://sogo:<%= @db_password %>@sogo-db:3306/sogo/sogo_folder_info";
  OCSSessionsFolderURL = "mysql://sogo:<%= @db_password %>@sogo-db:3306/sogo/sogo_sessions_folder";
  OCSEMailAlarmsFolderURL = "mysql://sogo:<%= @db_password %>@sogo-db:3306/sogo/sogo_alarms_folder";
  // With 3 parameters below, SOGo requires only 9 SQL tables in total
  // instead of creating 4 SQL tables for each user.
  OCSCacheFolderURL = "mysql://sogo:<%= @db_password %>@sogo-db:3306/sogo/sogo_cache_folder";
  OCSStoreURL = "mysql://sogo:<%= @db_password %>@sogo-db:3306/sogo/sogo_store";
  OCSAclURL = "mysql://sogo:<%= @db_password %>@sogo-db:3306/sogo/sogo_acl";
  MySQL4Encoding = "utf8mb4";

  /* Mail */
  SOGoDraftsFolderName = Drafts;
  SOGoSentFolderName = Sent;
  SOGoTrashFolderName = Trash;
  SOGoJunkFolderName = Junk;
  SOGoIMAPServer = "imap://imap.<%= @domain %>:143/?tls=YES&tlsVerifyMode=allowInsecureLocalhost";
  //SOGoSieveServer = "sieve://127.0.0.1:4190";
  SOGoSMTPServer = "smtp://smtp.<%= @domain %>:587/?tls=YES&tlsVerifyMode=allowInsecureLocalhost";
  SOGoMailDomain = <%= @domain %>;
  //  SOGoSMTPAuthenticationType = PLAIN;
  SOGoMailingMechanism = smtp;
  SOGoForceExternalLoginWithEmail = YES;
  SOGoMailSpoolPath = /var/spool/sogo;
  NGImap4AuthMechanism = "plain";
  //NGImap4ConnectionStringSeparator = "/";
  // IMAP connection pool.
  // Your performance will slightly increase, as you won't open a new
  // connection for every access to your IMAP server.
  // But you will get a lot of simultaneous open connections to your IMAP
  // server, so make sure he can handle them.
  // For debugging it is reasonable to turn pooling off.
  NGImap4DisableIMAP4Pooling = NO;

  /* Notifications */
  // Enable email-based alarms on events and tasks.
  SOGoEnableEMailAlarms = YES;

  // Notify meeting participants
  SOGoAppointmentSendEMailNotifications = YES;

  // Notify if a calendar or an address book has been created.
  SOGoFoldersSendEMailNotifications = NO;

  // Notify involved users of a calendar or address book's ACLs.
  SOGoACLsSendEMailNotifications = YES;

  // Notify when a modification is being done to his/her own calendar by someone else.
  SOGoNotifyOnExternalModifications = YES;

  /* Authentication */
  SOGoPasswordChangeEnabled = YES;

  /* SQL authentication example */
  /*  These database columns MUST be present in the view/table:
   *    c_uid - will be used for authentication -  it's the username or username@domain.tld)
   *    c_name - which can be identical to c_uid -  will be used to uniquely identify entries
   *    c_password - password of the user, plain-text, md5 or sha encoded for now
   *    c_cn - the user's common name - such as "John Doe"
   *    mail - the user's mail address
   *  See the installation guide for more details
   */
  SOGoUserSources =
    (
      {
        type = sql;
        id = directory;
        viewURL = "mysql://sogo:<%= @db_password %>@sogo-db:3306/sogo/sogo_users";
        canAuthenticate = YES;
        isAddressBook = YES;
        userPasswordAlgorithm = sha512-crypt;
        // prependPasswordScheme = YES;
      }
    );

  /* Web Interface */
  SOGoPageTitle = SUNET;
  SOGoVacationEnabled = YES;
  SOGoForwardEnabled = YES;
  SOGoHelpURL = "https://sunet.se";
  //SOGoSieveScriptsEnabled = YES;
  //SOGoMailAuxiliaryUserAccountsEnabled = YES;
  //SOGoTrustProxyAuthentication = NO;
  //SOGoXSRFValidationEnabled = NO;
  SOGoSieveFolderEncoding = UTF-8;
  SOGoFirstDayOfWeek = 1;
  SOGoRefreshViewCheck = every_5_minutes;
  SOGoMailReplyPlacement = below;

  // Disable gravatar
  SOGoExternalAvatarsEnabled = NO;
  SOGoGravatarEnabled = NO;

  // Control WebDAV access to the Calendar / Contacts collections.
  // This can be used to deny access to these resources from Thunderbird
  // Lightning for example.
  // Defaults to YES when unset.
  //SOGoCalendarDAVAccessEnabled = NO;
  //SOGoAddressBookDAVAccessEnabled = NO;

  // Allow users to share publicly (ie., requiring not authentication) their
  // calendars and address books.
  // Defaults to NO when unset.
  SOGoEnablePublicAccess = YES;

  /* General - SOGoTimeZone *MUST* be defined */
  SOGoLanguage = English;
  SOGoTimeZone = Europe/Stockholm;
  //SOGoCalendarDefaultRoles = (
  //  PublicDAndTViewer,
  //  ConfidentialDAndTViewer
  //);
  SOGoSuperUsernames = (kano@sunet.dev); // This is an array - keep the parens!
  //SxVMemLimit = 384;
  //WOPidFile = "/var/run/sogo/sogo.pid";
  //SOGoMemcachedHost = "/var/run/memcached.sock";

  /* Debug */
  //SOGoDebugRequests = YES;
  //SoDebugBaseURL = YES;
  ImapDebugEnabled = YES;
  //LDAPDebugEnabled = YES;
  //PGDebugEnabled = YES;
  MySQL4DebugEnabled = YES;
  // SOGoUIxDebugEnabled = YES;
  //WODontZipResponse = YES;
  WOLogFile = "/var/log/sogo/sogo.log";

  /* Tuning parameters */
  // set the maximum allowed size for content being sent to SOGo, this can
  // also limit the file attachment size being uploaded to SOGo when
  // composing a mail.
  // The value is in kilobyte. Default is 0 or disabled (unlimit).
  //WOMaxUploadSize = 15360;

  // Parameter used to set the maximum allowed email message size when
  // composing a mail.
  // The value is in kilobytes. By default, the value is 0, or disabled so
  // no limit will be set.
  //SOGoMaximumMessageSizeLimit = 15360;
  // Performance Tuning
  //
  // The amount of instances of SOGo that will be spawned to handle multiple
  // requests simultaneously. When started from the init script, that amount
  // is overriden by the `PREFORK=` setting in /etc/sysconfig/sogo or
  // /etc/default/sogo. A value of 3 is a reasonable default for low usage.
  // The maximum value depends on the CPU and IO power provided by your
  // machine: a value set too high will actually decrease performances under
  // high load.
  //
  // You should have at least one child per EAS device configured to use
  // "push". You must also have more children than you have EAS devices
  // configured to use "push" - in order to handle normal SOGo requests to
  // its Web or DAV interfaces.
  //
  // Defaults to 1 when unset, increase it if you see below error message in
  // sogo log file: 'No child available to handle incoming request'
  //
  // WARNING:
  //      - on RHEL/CentOS, this setting is controlled by parameter
  //        'PREFORK=' defined in /etc/sysconfig/sogo.
  //      - on Debian/Ubuntu, this setting is controlled by parameter
  //        'PREFORK=' defined in /etc/default/sogo.
  WOWorkersCount = 10;

  // Parameter used to set the maximum amount of time, in seconds, SOGo will
  // wait before replying to a Ping command.
  // If not set, it defaults to 10 seconds.
  // SOGoMaximumPingInterval = 10;

  // Parameter used to set the maximum amount of time, in seconds, SOGo will
  // wait before replying to a Sync command.
  // If not set, it defaults to 30 seconds.
  // SOGoMaximumSyncInterval = 30;

  // Parameter used to set the maximum amount of time, in seconds, SOGo will
  // wait before doing an internal check for data changes (add, delete, and
  // update). This parameter must be lower than SOGoMaximumSyncInterval and
  // SOGoMaximumPingInterval.
  // If not set, it defaults to 10 seconds.
  // SOGoInternalSyncInterval = 10;

  // Specifies the number of minutes after which a busy child process will be
  // killed by the parent process.
  // Defaults to 10 (minutes).
  // WOWatchDogRequestTimeout = 10;

  // Overwrite the maximum number of items returned during a Sync operation.
  // Defaults to 0, which means no overwrite is performed.
  // Setting this parameter to a value greater than 512 will have unexpected
  // behaviour with various ActiveSync clients.
  //SOGoMaximumSyncWindowSize = 100;

  // Overwrite the maximum response size during a Sync operation.
  // The value is in kilobytes. Setting this to 512 means the response size
  // will be of 524288 bytes or less (or a bit greater if needed for syncing
  // one item). Note that if you set the value too low and a mail message
  // (or any other object like calendar events, tasks and contacts) surpasses
  // it, it will still be synced but only this item will be.
  // Defaults to 0, which means no overwrite is performed.
  //
  // Say you have these five mails and you set the limit to 512KB:
  //  1.  250 KB
  //  2.  250 KB
  //  3.   25 KB
  //  4.  750 KB
  //  5.   10 KB
  // Sync iteration no. 1 will pick message 1, 2 and 3.
  // Sync iteration no. 2 will pick message 4.
  // Sync iteration no. 3 will pick message 5.
  // SOGoMaximumSyncResponseSize = 0;

  // The maximum amount of memory (in megabytes) that a child can use.
  // Reaching that value will force children processes to restart, in order
  // to preserve system memory.
  //
  // Error message when it reaches the value:
  // "terminating app, vMem size limit (xxx MB) has been reached (currently xxx MB)"
  //
  // Defaults to 384.
  // SxVMemLimit = 384;
}
