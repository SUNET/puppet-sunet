#!/bin/bash
if [ -z "$3" ]; then
	echo "Usage $0 <dir for xml-files> <min valid days> <cert-file>"
	exit 1
fi
if [ -d "$1" ]; then
	xmlDir=$1
	if [ $(ls $xmlDir | grep ".xml$" | wc -l) -lt 1 ];then
		echo "$xmlDir doesn't contain any .xml files"
		exit 2
	fi
	statusDir=$xmlDir/../status
	if [ ! -d $statusDir ]; then
		mkdir -p $statusDir
		if [ ! -d $statusDir ]; then
			echo "Can't create $statusDir"
			exit 4
		fi
	fi
	shift
else
	echo "$1 is not an directory"
	exit 4
fi

validDays=$1
shift

if [ -r "$1" ]; then
	certFile=$1
	shift
else
	echo "Can't read $1"
	exit 3
fi

nowTS=$(date '+%s')
now=$(date)
extraCheck=""
while [ -n "$1" ]; do
	extraCheck="$extraCheck $xmlDir/../entities/$1"
	shift
done
for file in $xmlDir/*.xml; do
	fileName=$(basename $file).txt
	status="OK"
	validUntil=$(sed 's;\(</*\)[a-z0-9]*:;\1;g' $file | xmllint --xpath "string(/EntitiesDescriptor/@validUntil)" -)
	validUntilTS=$(date -d "$validUntil -$2 DAY" '+%s')
	if [ $validUntilTS -lt $nowTS ];then
		status="FAIL - $validUntilTS"
	fi
	xmlsec1 --verify --pubkey-cert-pem $certFile --id-attr:ID  urn:oasis:names:tc:SAML:2.0:metadata:EntitiesDescriptor $file > /dev/null 2>&1
	if [ $? -gt 0 ]; then
		status="FAIL - cert"
	fi
	echo "$status - $now" > "$statusDir/$fileName"
done

for file in $extraCheck; do
	fileName=$(basename $file | sed 's/%7Bsha1%7D//').txt
	status="OK"
	validUntil=$(sed 's;\(</*\)[a-z0-9]*:;\1;g' $file | xmllint --xpath "string(/EntitiesDescriptor/@validUntil)" -)
	validUntilTS=$(date -d "$validUntil -$2 DAY" '+%s')
	if [ $validUntilTS -lt $nowTS ];then
		status="FAIL - $validUntilTS"
	fi
	xmlsec1 --verify --pubkey-cert-pem $certFile --id-attr:ID  urn:oasis:names:tc:SAML:2.0:metadata:EntityDescriptor $file > /dev/null 2>&1
	if [ $? -gt 0 ]; then
		status="FAIL - cert"
	fi
	echo "$status - $now" > "$statusDir/$fileName"
done
