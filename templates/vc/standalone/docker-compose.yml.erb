---
version: "3"

services:
  issuer:
    container_name: "vc_issuer"
    image: "docker.sunet.se/dc4eu/issuer:<%= @vc_version %>"
    healthcheck:
      test: curl --fail http://vc_issuer:8080/issuer/health || exit 1
      interval: 20s
      retries: 5
      timeout: 10s
    restart: always
    volumes:
      - ./cert:/cert:ro
      - /opt/vc/config.yaml:/config.yaml:ro
    depends_on:
      - redis
      - mongo
    networks:
      vc-net:
        ipv4_address: 172.16.50.10
    environment:
      - "VC_CONFIG_YAML=config.yaml"

  verifier:
    container_name: "vc_verifier"
    image: "docker.sunet.se/dc4eu/verifier:<%= @vc_version %>"
    healthcheck:
      test: curl --fail http://vc_verifier:8080/verifier/health || exit 1
      interval: 20s
      retries: 5
      timeout: 10s
    restart: always
    volumes:
      - ./cert:/cert:ro
      - /opt/vc/config.yaml:/config.yaml:ro
    depends_on:
      - redis
      - mongo
      - issuer
    networks:
      vc-net:
        ipv4_address: 172.16.50.11
    environment:
      - "VC_CONFIG_YAML=config.yaml"

  datastore:
    container_name: "vc_datastore"
    image: "docker.sunet.se/dc4eu/datastore:<%= @vc_version %>"
    healthcheck:
      test: curl --fail http://vc_datastore:8080/datastore/health || exit 1
      interval: 20s
      retries: 5
      timeout: 10s
    restart: always
    volumes:
      - ./cert:/cert:ro
      - /opt/vc/config.yaml:/config.yaml:ro
    depends_on:
      - redis
      - mongo
      - issuer
    networks:
      vc-net:
        ipv4_address: 172.16.50.12
    environment:
      - "VC_CONFIG_YAML=config.yaml"

  redis:
    image: redis:alpine
    container_name: "vc_redis"
    restart: always
    expose:
      - 6379
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    networks:
      - vc-net

  mongo:
    image: "mongo:<%= @mongodb_version %>"
    container_name: "vc_mongo"
    restart: always
    expose:
      - 27017
    volumes:
      - mongo_data:/data
    networks:
      - vc-net

  ca:
    container_name: "vc_ca"
    image: docker.sunet.se/dc4eu/mockca:latest
    restart: always
    depends_on:
      - redis
      - mongo
      - issuer
      - verifier
    networks:
      vc-net:
        ipv4_address: 172.16.50.20
    environment:
      - "CA_SLEEP=<%= @mockca_sleep %>"
      - "CA_ADDR=172.16.50.20:8080"

networks:
  vc-net:
    driver: bridge
    driver_opts:
      com.docker.network.bridge.name: br-vc
    ipam:
      driver: default
      config:
        - subnet: 172.16.50.0/24
volumes:
  redis_data:
  mongo_data:
