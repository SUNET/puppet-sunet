---
version: "3.3"

services:
  vc_issuer:
    container_name: "vc_issuer"
    image: "docker.sunet.se/dc4eu/issuer:<%= @vc_version %>"
    restart: always
    volumes:
      - /opt/vc/config.yaml:/config.yaml:ro
      - /var/log/sunet:/var/log/sunet
    links:
      - vc_haproxy
      - vc_jaeger
    depends_on:
      - vc_redis
      - vc_mongo
      - vc_registry
      - ca_ca
      - vc_haproxy
      - vc_jaeger
    environment:
      - "VC_CONFIG_YAML=config.yaml"
      - "HTTP_PROXY=<%= @fqdn %>"
      - "http_proxy=<%= @fqdn %>"
      - "HTTPS_PROXY=<%= @fqdn %>"
      - "https_proxy=<%= @fqdn %>"
      - "no_proxy=localhost,/var/run/docker.sock,127.0.0.0/8,ca_ca,vc_jaeger"

  vc_verifier:
    container_name: "vc_verifier"
    image: "docker.sunet.se/dc4eu/verifier:<%= @vc_version %>"
    restart: always
    volumes:
      - /opt/vc/config.yaml:/config.yaml:ro
      - /var/log/sunet:/var/log/sunet
    links:
      - vc_haproxy
    depends_on:
      - vc_redis
      - vc_mongo
      - vc_issuer
      - vc_haproxy
    environment:
      - "VC_CONFIG_YAML=config.yaml"
      - "HTTP_PROXY=<%= @fqdn %>"
      - "http_proxy=<%= @fqdn %>"
      - "HTTPS_PROXY=<%= @fqdn %>"
      - "https_proxy=<%= @fqdn %>"
      - "no_proxy=localhost,/var/run/docker.sock,127.0.0.0/8"

  vc_datastore:
    container_name: "vc_datastore"
    image: "docker.sunet.se/dc4eu/datastore:<%= @vc_version %>"
    restart: always
    volumes:
      - /opt/vc/config.yaml:/config.yaml:ro
      - /var/log/sunet:/var/log/sunet
    links:
      - vc_haproxy
    depends_on:
      - vc_redis
      - vc_mongo
      - vc_issuer
      - vc_haproxy
    environment:
      - "VC_CONFIG_YAML=config.yaml"
      - "HTTP_PROXY=<%= @fqdn %>"
      - "http_proxy=<%= @fqdn %>"
      - "HTTPS_PROXY=<%= @fqdn %>"
      - "https_proxy=<%= @fqdn %>"
      - "no_proxy=localhost,/var/run/docker.sock,127.0.0.0/8"

  vc_registry:
    container_name: "vc_registry"
    image: "docker.sunet.se/dc4eu/registry:<%= @vc_version %>"
    restart: always
    volumes:
      - /opt/vc/config.yaml:/config.yaml:ro
      - /var/log/sunet:/var/log/sunet
    links:
      - vc_haproxy
    depends_on:
      - vc_redis
      - vc_mongo
      - vc_haproxy
    environment:
      - "VC_CONFIG_YAML=config.yaml"
      - "HTTP_PROXY=<%= @fqdn %>"
      - "http_proxy=<%= @fqdn %>"
      - "HTTPS_PROXY=<%= @fqdn %>"
      - "https_proxy=<%= @fqdn %>"
      - "no_proxy=localhost,/var/run/docker.sock,127.0.0.0/8"

  vc_haproxy:
    container_name: "vc_haproxy"
    image: "haproxytech/haproxy-alpine"
    ports:
      - 80:80
      - 443:443
      - 8404:8404
    volumes:
      - /opt/vc/haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg:ro
      - /etc/letsencrypt/live/<%= @fqdn %>-0001/fullchain.pem:/etc/certs/cert.pem:ro
      - /etc/letsencrypt/live/<%= @fqdn %>-0001/privkey.pem:/etc/certs/cert.pem.key:ro
      - /opt/vc/certs/ca_cert.pem:/etc/certs/ca_cert.pem:ro
      - /opt/vc/certs/ca_crl.pem:/etc/certs/ca_crl.pem:ro

  vc_redis:
    image: redis:alpine
    container_name: "vc_redis"
    restart: always
    expose:
      - 6379
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes

  vc_mongo:
    image: "mongo:<%= @mongodb_version %>"
    container_name: "vc_mongo"
    restart: always
    expose:
      - 27017
    volumes:
      - mongo_data:/data
    environment:
      - "MONGO_INITDB_ROOT_USERNAME=<%= @mongo_user %>"
      - "MONGO_INITDB_ROOT_PASSWORD=<%= @mongo_pw %>"
       

  vc_jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: vc_jaeger
    restart: always
    ports:
      - 16686:16686
    expose:
      - 4317
    environment:
      - "COLLECTOR_OTLP_ENABLED=true"

  vc_pdfsigner:
    image: "docker.sunet.se/dc4eu/<%= @ca_flavor %>:<%= @ca_version %>"
    container_name: "vc_pdfsigner"
    restart: always
      volumes:
        - /opt/vc/certs/external_certs:/app:ro
        - /var/run/pcscd:/var/run/pcscd
    devices:
      - /dev/bus/usb
    environment:
      - "PKCS11_LABEL=<%= @pkcs11_label %>"
      - "PKCS11_PIN=<%= @pkcs11_pin %>"
      - "PKCS11_MODULE=<%= @pkcs11_module %>"
      - "PKCS11_KEY_LABEl=<%= @pkcs11_key_label %>"
      - "PKCS11_CERT_LABEl=<%= @pkcs11_cert_label %>"
  
networks:
  default:
    driver_opts:
      com.docker.network.bridge.name: br-vc_ca

volumes:
  redis_data:
  mongo_data:
