#!/usr/bin/env bash

set -e 

out_folder="/opt/vc/softhsm2"
if [[ ! -d  ${out_folder} ]]; then
    mkdir -p ${out_folder}
fi

init_hsm() {
    ret=$(pkcs11-tool --module <%= @pkcs11_module %> --init-token --pin <%= @pkcs11_pin %> --so-pin <%= @pkcs11_pin %> --label <%= @pkcs11_label %>)
    if [[ ${reg} != 0 ]]; then
        exit 1
    fi
}

create_pki() {
    ret=$(openssl req -x509 -newkey rsa:4096 -keyout "${out_folder}"/private.pem -out "${out_folder}"/cert.pem -sha256 -days 3650 -nodes -subj "/C=SE/ST=Stockholm/L=Stockholm/O=SUNET/OU=Infrastructure/CN=example.com")
    if [[ ${reg} != 0 ]]; then
        exit 1
    fi

}

import_private_key() {
    ret=$(pkcs11-tool --module <%= @pkcs11_module %> -l --pin <%= @pkcs11_pin %> --write-object "${out_folder}"/private.pem --type privkey --id 1001 --label <%= @pkcs11_key_label %>)
    if [[ ${reg} != 0 ]]; then
        exit 1
    fi
}

import_cert() {
    ret=$(pkcs11-tool --module <%= @pkcs11_module %> -l --pin <%= @pkcs11_pin %> --write-object "${out_folder}"/cert.pem --type cert --id 2002 --label <%= @pkcs11_cert_label %>)
    if [[ ${reg} != 0 ]]; then
        exit 1
    fi
}

create_run_once() {
    touch "${out_folder}"/.run_once
    echo > "${out_folder}"/.run_once
}

prevent_run_more_than_once() {
    if [[ -f  "${out_folder}"/.run_once ]]; then
        printf "this script can only run once!"
        exit 0
    fi
}

prevent_run_more_than_once

init_hsm
create_pki

import_private_key
import_cert

create_run_once