---
version: '3'

services:

  haproxy:
    image: '<%= @haproxy_image %>:<%= @haproxy_imagetag %>'
    restart: always
    volumes:
      - '/dev/log:/dev/log'
#      - '<%= @basedir %>/etc:/etc/haproxy:ro'
#      - '<%= @basedir %>/run:/var/run/haproxy'
      - '/etc/dehydrated:/etc/dehydrated:ro'  # XXX reduce to only necessary set of files later
      - '/etc/ssl:/etc/ssl:ro'  # XXX reduce to only necessary set of files later
      - 'haproxy_data:/etc/haproxy'
    depends_on:
      - config
    environment:
      - 'WAIT_FOR_INTERFACE=sarimner0'
    command: /autoreload.sh

  varnish:
    image: <%= @varnish_image %>:<%= @varnish_imagetag %>
    expose:
      - 1080
    volumes:
      - /opt/frontend/config/common/default.vcl:/etc/varnish/default.vcl:ro
    command: varnishd -F -f /etc/varnish/default.vcl -s malloc,100M -a 0.0.0.0:1080
    restart: always
    depends_on:
      - haproxy

  config:
    image: 'docker.sunet.se/frontend/frontend-tools:latest'
    restart: always
    volumes:
      - /opt/frontend/scripts:/opt/frontend/scripts:ro
      - /opt/frontend/config/common:/opt/frontend/config/common:ro
      - /opt/frontend/config/<%= @site_name %>:/opt/frontend/config/<%= @site_name %>:ro
      - /opt/frontend/api/backends/<%= @site_name %>:/opt/frontend/api/backends/<%= @site_name %>:ro
      - haproxy_data:/etc/haproxy
    command: /opt/frontend/scripts/generate-haproxy-config --instance <%= @instance %> --haproxy_template /opt/frontend/config/<%= @site_name %>/haproxy.j2

volumes:
  haproxy_data:

# Provide user-friendly name of bridge interface
networks:
  default:
    driver_opts:
      com.docker.network.bridge.name: br-<%= @instance %>
