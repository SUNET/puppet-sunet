# haproxy for SUNET frontend load balancer nodes.
#
# The haproxy 'frontend' and 'backend' entrys are generated by Puppet
# into the config files haproxy-frontend.cfg and haproxy-backend.cfg.
#
global
    log /dev/log local0

    daemon
    maxconn 256
    stats socket /var/run/haproxy/stats
    #server-state-file /tmp/server_state

    user <%= @username %>
    group <%= @group %>

    # Default SSL material locations
    ca-base /etc/ssl/certs
    crt-base /etc/ssl/private

    ssl-default-bind-ciphers ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:ECDH+3DES:DH+3DES:RSA+AESGCM:RSA+AES:RSA+3DES:!aNULL:!MD5:!DSS
    ssl-default-bind-options no-sslv3
    tune.ssl.default-dh-param 2048

    spread-checks 20

defaults
    log global
    mode http
    option httplog
    option dontlognull
    option redispatch
    option forwardfor
    # funny looking values because recommendation is to have these slightly
    # above multiples of three seconds to play nice with TCP resend timers
    timeout check 5s
    timeout connect 4s
    timeout client 17s
    timeout server 17s
    timeout http-request 5s
    balance roundrobin


frontend LB-http
    # expose stats info over HTTP to exabgp
    bind 127.0.0.1:9000
    http-request set-log-level silent
    default_backend LB

backend LB
    stats enable
    #stats hide-version
    stats uri /haproxy_stats

<% if @static_backends -%>
<% @static_backends.each do |server,addrs| -%>
backend <%= server %>
  <% i = 0 %><% addrs.sort.each do |addr| %><% i = i + 1 %>server <%= server %>_<%= i %> <%= addr %><% end %>
<% end %>
<% end %>

#
# Redirect _everything_ to HTTPS
frontend http-frontend
    bind 0.0.0.0:80
    bind :::80

<% if @port80_acme_c_backend -%>
    acl port80-acme_c-acl path_beg /.well-known/acme-challenge/
    redirect scheme https code 301 if !{ ssl_fc } !port80-acme_c-acl
    use_backend <%= @port80_acme_c_backend -%> if port80-acme_c-acl
<% else %>
    redirect scheme https code 301 if !{ ssl_fc }
<% end -%>
