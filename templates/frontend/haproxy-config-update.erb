#!/bin/bash
#
# Re-generate haproxy backend configuration and restart haproxy if it changed
#

set -e

backend_cfgfile='/opt/frontend/haproxy/etc/haproxy-backends.cfg'
backends_dir='/opt/frontend/api/backends/'
registration_age_limit=<%= @registration_age_limit %>
haproxy_service_name='<%= @haproxy_service_name %>'

site_config() {
    dir="$1/$2"
    site=$2

    # XXX not sure if we should output this line if there are no servers found below?
    echo "backend ${site}"

    ls -1 $dir | while read server; do
	if [ -f "${dir}/${server}" ]; then
	    # pretty sure this won't fly anywhere near something not GNU date ;)
	    age=$(date -d "now - $( stat -c "%Y" ${dir}/${server} ) seconds" +%s)
	    if [ $age -gt $registration_age_limit ]; then
		logger -i -t haproxy-config-update "Removing ${site}/${server}, $age seconds old (> $registration_time_limit)"
		rm -f "${dir}/${server}"
	    else
		# paranoia
		grep -e '^\s*server ' "${dir}/${server}"
	    fi
	fi
    done

    echo ""
}

# Generate an updated haproxy-backends.cfg file

rm -f "${backend_cfgfile}.new"

ls -1 ${backends_dir} | while read site; do
    if [ -d "${backends_dir}/${site}" ]; then
	site_config ${backends_dir} ${site} >> "${backend_cfgfile}.new"
    fi
done

# Check if haproxy config has changed and reload
reload=0
changed=0
cmp --quiet "${backend_cfgfile}.new" "${backend_cfgfile}" || changed=1
if [ $changed -ne 0 ]; then
    (echo "haproxy backend config changed:";
     diff -u "${backend_cfgfile}" "${backend_cfgfile}.new"
    ) | logger -i -t haproxy-config-update -s -f /dev/stdin
    cp "${backend_cfgfile}.new" "${backend_cfgfile}"
    reload=1
fi

if [ $reload -ne 0 ]; then
    # XXX do fancy hitless reload later
    logger -i -t haproxy-config-update -s "Restarting haproxy service ${haproxy_service_name}"
    service "${haproxy_service_name}" restart
fi

rm -f "${backend_cfgfile}.new"
