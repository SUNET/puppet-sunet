---
version: '3'
services:

  auth_server:
    image: 'docker.sunet.se/sunet/sunet-auth-server:<%= scope.function_safe_hiera(["auth_server_tag"]) %>'
    restart: always
    expose:
      - 8080
    volumes:
      - /opt/sunet/<%= @service_name %>/etc:/opt/sunet/etc
      - /var/run/<%= @service_name %>:/opt/sunet/run
      - /var/log/sunet/<%= @service_name %>:/var/log/sunet
      - /etc/passwd:/etc/passwd:ro
      - /etc/group:/etc/group:ro
    environment:
      - "app_name=auth-server"
      - "config_file=/opt/sunet/etc/config.yaml"
      - "app_entrypoint=auth_server.run:app"

<% if @saml_sp -%>
  # mongodb and pyff are only needed if we want to run a stateful service like a SAML SP
  mongodb:
    image: "docker.sunet.se/library/mongo:5.0.14"
    restart: always
    expose:
      - 27017
    volumes:
      - mongodbdata:/data/db
      - /etc/passwd:/etc/passwd:ro
      - /etc/group:/etc/group:ro
    environment:
      MONGO_INITDB_ROOT_USERNAME: <%= @mongodb_root_username %>
      MONGO_INITDB_ROOT_PASSWORD: <%= @mongodb_root_password %>

  pyff:
    image: 'docker.sunet.se/pyff:2.0.0'
    restart: always
    expose:
      - 8080
    volumes:
      - /opt/sunet/<%= @service_name %>/etc/mdx.fd:/opt/pyff/mdx.fd:ro
      - /opt/sunet/<%= @service_name %>/etc/md-signer2.crt:/opt/pyff/md-signer2.crt:ro
      - /etc/passwd:/etc/passwd:ro
      - /etc/group:/etc/group:ro
    environment:
       - LOGLEVEL=INFO
       - PIPELINE=/opt/pyff/mdx.fd
       - UPDATE_FREQUENCY=900
<% end %>

  haproxy:
    image: 'docker.sunet.se/eduid/haproxy:<%= scope.function_safe_hiera(["haproxy_tag"]) %>'
    restart: always
    ports:
      - <%= @port %>:443
    volumes:
      - /opt/sunet/<%= @service_name %>-haproxy/etc:/etc/haproxy:ro
      - <%= @tls_certificates[ @fqdn ][ 'haproxy' ] %>:<%= @tls_certificates[ @fqdn ][ 'haproxy' ] %>:ro
      - /etc/ssl:/etc/ssl
    links:
     - auth_server
    depends_on:
     - auth_server

volumes:
  mongodbdata:

# Provide user-friendly name of bridge interface
networks:
  default:
    driver_opts:
      com.docker.network.bridge.name: br-<%= @service_name %>

