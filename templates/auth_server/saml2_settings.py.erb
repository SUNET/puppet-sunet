#!/usr/bin/env python
# -*- coding: utf-8 -*-
###################################################
#
# This file is managed with
#
#  #####   #    #  #####   #####   ######   #####
#  #    #  #    #  #    #  #    #  #          #
#  #    #  #    #  #    #  #    #  #####      #
#  #####   #    #  #####   #####   #          #
#  #       #    #  #       #       #          #
#  #        ####   #       #       ######     #
#
# ... so you can't just change it locally.
#
###################################################
import saml2
from os import path

from saml2 import attributemaps
from saml2.saml import NAMEID_FORMAT_PERSISTENT

DEFAULT_ATTRIBUTEMAPS = path.dirname(attributemaps.__file__)

BASE_URL = '<%= @pysaml2_base_url %>'
SAML2DIR = path.dirname(__file__)

SAML_CONFIG = {
    # full path to the xmlsec1 binary programm
    'xmlsec_binary': '/usr/bin/xmlsec1',

    # your entity id, usually your subdomain plus the url to the metadata view
    'entityid': '%s/metadata' % BASE_URL,

    # directory with attribute mapping
    'attribute_map_dir': DEFAULT_ATTRIBUTEMAPS,
    'allow_unknown_attributes': True,

    # this block states what services we provide
    'service': {
        # we are just a lonely SP
        'sp': {
            'name': 'Sunet Auth Server SP',
            'endpoints': {
                # url and binding to the assetion consumer service view
                # do not change the binding or service name
                'assertion_consumer_service': [
                    ('%s/saml2-acs' % BASE_URL,
                     saml2.BINDING_HTTP_POST),
                ],
                # url and binding to the single logout service view
                # do not change the binding or service name
                'single_logout_service': [
                    ('%s/saml2-ls' % BASE_URL,
                     saml2.BINDING_HTTP_REDIRECT),
                ],
            },
            # Sign authn request
            'authn_requests_signed': True,
            # Require signed authn response
            'want_response_signed': True,
            'name': 'sunet_auth_server_sp',
            'name_id_format': NAMEID_FORMAT_PERSISTENT,
        },
    },

    # where the remote metadata is stored
    'metadata': {
        'mdq': [{'url': 'http://pyff:8080', 'freshness_period': 'P0Y0M0DT0H10M0S'}],
    },

    # set to 1 to output debugging information
    'debug': 1,

    # certificate
    'key_file': '/opt/sunet/etc/saml.key',  # private part
    'cert_file': '/opt/sunet/etc/saml.pem',  # public part


    # own metadata settings
    'contact_person': [
        {'given_name': 'Johan',
         'sur_name': 'Lundberg',
         'company': 'Sunet',
         'email_address': 'lundberg@sunet.se',
         'contact_type': 'technical'},
    ],
    # you can set multilanguage information here
    'organization': {
        'name': [('Sunet', 'en')],
        'display_name': [('Sunet', 'en')],
        'url': [('https://www.sunet.se', 'en')],
    },
}

# Workaround for make_metadata.py or something
#
# File "/opt/eduid/local/lib/python2.7/site-packages/saml2/config.py", line 341, in load_file
#    return self.load(mod.CONFIG, metadata_construction)
# AttributeError: 'module' object has no attribute 'CONFIG'
CONFIG = SAML_CONFIG
